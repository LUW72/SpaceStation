

:root {
  --pixel-size: 2px;
  --grid-cell: calc(var(--pixel-size) * 16);
  --bg: #1a1a1a;
}

@media (min-width: 700px) {
  :root {
    --pixel-size: 3px;
  }
}

@media (min-width: 1000px) {
  :root {
    --pixel-size: 4px;
  }
}

/* === Global Styles === */
html,
body {
  height: 100%;
  margin: 0;
}

body {
  background: var(--bg);
  display: flex;
  align-items: center;
  justify-content: center;
}

.pixel-art {
  image-rendering: pixelated;
}

/* === Layout Elements === */
.frame {
  width: calc(var(--pixel-size) * 160);
  height: calc(var(--pixel-size) * 144);
  outline: var(--pixel-size) solid #fff;
  position: relative;
  z-index: 1;
}

.camera {
  width: 100%;
  height: 100%;
  overflow: hidden;
  background: var(--bg);
  position: relative;
}

.map {
  position: absolute;
  top: 0;
  left: 0;
  image-rendering: pixelated;
  background-color: #07c2cc;
  background-size: 100%;
  width: calc(13 * var(--grid-cell));
  height: calc(10 * var(--grid-cell));
}


.map {
  position: relative;
  width: 100vw;
  height: 100vh;
  background: var(--bg);
  z-index: auto;
}

.tile {
  position: absolute;
  width: calc(var(--pixel-size) * 16);
  height: calc(var(--pixel-size) * 16);
  image-rendering: pixelated;
  background-repeat: no-repeat;
  background-size: cover;
}

/* === TILE TYPES === */

.tile.floor {
  background-image: url("./textures/floor_01.png"); 
}

.tile.wall_corner_a {
  background-image: url("./textures/wall_corner.png"); 
  transform: rotate(0);
}

.tile.wall_corner_b {
  background-image: url("./textures/wall_corner.png"); 
  transform: rotate(90deg);
}

.tile.wall_corner_c {
  background-image: url("./textures/wall_corner.png"); 
  transform: rotate(-90deg);
}

.tile.wall_corner_d {
  background-image: url("./textures/wall_corner.png"); 
  transform: rotate(180deg);
}

.tile.wall_corner_90_a {
  background-image: url("./textures/wall_corner_full.png"); 
}

.tile.wall_corner_90_b {
  background-image: url("./textures/wall_corner_full.png");
  transform: scaleX(-1); 
}

.tile.wall_corner_90_b_2 {
  background-image: url("./textures/wall_corner_full.png"); 
  transform: rotate(-90deg);  
}

.tile.wall_corner_90_c {
  background-image: url("./textures/wall_corner_full.png"); 
  transform: rotate(180deg);
}

.tile.wall_corner_90_d {
  background-image: url("./textures/wall_corner_full.png"); 
  transform: rotate(90deg);
}

.tile.wall {
  background-image: url("./textures/wall_2.png");
  transform: rotate(270deg);
}

.tile.wall_top {
  background-image: url("./textures/wall_2.png");
}

.tile.wall_bottom {
  background-image: url("./textures/wall_2.png");
  transform: rotate(180deg);
}

.tile.wall_right_side {
  background-image: url("./textures/wall_2.png");
  transform: rotate(90deg);
}


.tile.wall.top {
  background-image: url("./textures/wall_top.png"); 
}

.tile.wall_top_2 {
  background-image: url("./textures/wall_top_2.png"); 
}


.tile.grass {
  background-image: url("./textures/grass.png"); 
}

.tile.door {
  background-image: url("./textures/door_01.png"); 
}

.tile.empty {
  background-color: var(--bg);
}


/* Optional fallback for unknown tiles */
.tile.unknown {
  background-color: magenta;
}


.object-layer {
  position: absolute;
  top: 0;
  left: 0;
  pointer-events: none; /* allows character to walk through unless interactable handling is later added */
  width: 100%;
  height: 100%;
}

.object {
  position: absolute;
  width: calc(var(--pixel-size) * 8);  /* 16px tile / 2 = 8px */
  height: calc(var(--pixel-size) * 8);
  opacity: 0.9;
  border-radius: 2px;

  background-size: 100% 100%;
  background-repeat: no-repeat;
  background-position: center;  
}

/* Test visual styles */

.object.floor_crack {
  background-image: url("./textures/floor_01_crack.png");
  z-index: 0;
}

.object.floor_drain {
  background-image: url("./textures/floor_01_drain.png");
  z-index: 0;  
}

.object.wall_pipe {
  background-image: url("./textures/wall_pipe.png");

  z-index: 0;  
}
.object.table_chair {
  background-image: url("./textures/obj_tableChair.png");

  position: absolute;
  background-position-y: -4px;  
  transform: scale(1.0);
  transform-origin: center; 
  pointer-events: none; /* Optional: so the object doesn't block input */

  z-index: 30;
}

.object.vending_mach {
  background-image: url("./textures/obj_vendingMach.png");

  transform: scale(2.0);
  transform-origin: center; 
  pointer-events: none; /* Optional: so the object doesn't block input */
  z-index: 12;
  background-position-y: -10px;  

}

.object.table {
  background-color: saddlebrown;
}

.object.chest {
  background-color: crimson;
}

.object.signpost {
  background-image: url("./textures/obj_sign.png");
  background-position-y: -3px;
}

.object.antenna {
  background-image: url("./textures/obj_antenna.png");
  transform-origin: center; 
  pointer-events: none; 

}





/* === Character === */

.character {
  width: var(--grid-cell);
  height: var(--grid-cell);
  position: absolute;
  overflow: hidden;
  z-index: 20; /* ez szabályozza a layer elhelyezkedését */
}


.shadow {
  width: var(--grid-cell);
  height: var(--grid-cell); 
  position: absolute;
  background: url("https://assets.codepen.io/21542/DemoRpgCharacterShadow.png") no-repeat;
  background-size: 100%;
}

.character_spritesheet {
  position: absolute;
  background: url("https://assets.codepen.io/21542/DemoRpgCharacter.png") no-repeat;
  background-size: 100%;
  width: calc(var(--grid-cell) * 4);
  height: calc(var(--grid-cell) * 4); 
}

.character[facing="right"] .character_spritesheet {
  background-position-y: calc(var(--pixel-size) * -16);
}

.character[facing="up"] .character_spritesheet {
  background-position-y: calc(var(--pixel-size) * -32);
}

.character[facing="left"] .character_spritesheet {
  background-position-y: calc(var(--pixel-size) * -48);
}

.character[walking="true"] .character_spritesheet {
  animation: walkAnimation 0.6s steps(4) infinite;
}

@keyframes walkAnimation {
  from {
    transform: translate3d(0%, 0%, 0);
  }
  to {
    transform: translate3d(-100%, 0%, 0);
  }
}

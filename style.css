:root {
  --pixel-size: 2px;
  --grid-cell: calc(var(--pixel-size) * 16);
  --bg: #000000;
}

@media (min-width: 700px) {
  :root {
    --pixel-size: 3px;
  }
}

@media (min-width: 1000px) {
  :root {
    --pixel-size: 4px;
  }
}

/* === Global Styles === */
html,
body {
  height: 100%;
  margin: 0;
}

body {
  background: var(--bg);
  display: flex;
  align-items: center;
  justify-content: center;
}

.pixel-art {
  image-rendering: pixelated;
}

/* === Layout Elements === */
.game-container {
  display: flex;
  align-items: center;
  gap: calc(var(--pixel-size) * 2);
  position: relative;
}

.frame {
  width: calc(var(--pixel-size) * 160);
  height: calc(var(--pixel-size) * 144);
  outline: var(--pixel-size) solid #fff;
  position: relative;
  z-index: 1;
}

.camera {
  width: 100%;
  height: 100%;
  overflow: hidden;
  background: #0d0d0d;
  position: relative;
}

.map {
  position: absolute;
  top: 0;
  left: 0;
  image-rendering: pixelated;
  background-color: #07c2cc;
  background-size: 100%;
  width: calc(13 * var(--grid-cell));
  height: calc(10 * var(--grid-cell));
}

.map {
  position: relative;
  width: 100vw;
  height: 100vh;
  background: #000;
}

.tile {
  position: absolute;
  width: calc(var(--pixel-size) * 16);
  height: calc(var(--pixel-size) * 16);
  image-rendering: pixelated;
  background-repeat: no-repeat;
  background-size: cover;
}

/* === TILE TYPES === */

.tile.floor {
  background-image: url("./textures/floor_01.png"); /* Example: light stone */
}

.tile.floor_cracked {
  background-image: url("./textures/floor_01_1.png"); 
}

.tile.wall_corner_SE {
  background-image: url("./textures/wall_corner_SouthEast.png"); 
}

.tile.wall {
  background-image: url("./textures/wall_right.png"); /* Example: dark brick wall */
}

.tile.sign {
  background-color: aquamarine;
}

.tile.wall_top {
  background-image: url("./textures/wall_top.png"); /* Animated lava if desired */
}

.tile.wall_top_2 {
  background-image: url("./textures/wall_top_2.png"); /* Animated lava if desired */
}

.tile.grass {
  background-image: url("./textures/grass.png"); /* Example: soft green grass */
}

.tile.door {
  background-image: url("./textures/door_01.png"); /* Wooden or metallic door */
}

.tile.water {
  background-image: url("./textures/water.png"); /* Animated water */
}

.tile.ice {
  background-image: url("./textures/ice.png"); /* Slippery tile logic possible */
}

.tile.sand {
  background-image: url("./textures/sand.png");
}

/* Optional fallback for unknown tiles */
.tile.unknown {
  background-color: magenta;
}

.object-layer {
  position: absolute;
  top: 0;
  left: 0;
  pointer-events: none; /* allows character to walk through unless interactable handling is later added */
}

.object {
  position: absolute;
  width: calc(var(--pixel-size) * 8);  /* 16px tile / 2 = 8px */
  height: calc(var(--pixel-size) * 8);
  opacity: 0.9;
  border-radius: 2px;
}

/* Test visual styles */
.object.table {
  background-color: saddlebrown;
}

.object.chest {
  background-color: crimson;
}

.object.signpost {
  background-color: dodgerblue;
}

/* === Character === */

.character {
  width: calc(var(--grid-cell) * 0.5);
  height: calc(var(--grid-cell) * 0.5);
  position: absolute;
  overflow: hidden;
  border: 1px red solid;
  transform: translate(calc(var(--grid-cell) * 0.25), calc(var(--grid-cell) * 0.25)); /* Add offset to center the character */
}

.shadow {
  width: calc(var(--grid-cell) * 0.5);
  height: calc(var(--grid-cell) * 0.5); 
  position: absolute;
  background: url("https://assets.codepen.io/21542/DemoRpgCharacterShadow.png") no-repeat;
  background-size: 100%;
}

.character_spritesheet {
  position: fixed;
  background: url("textures/sprite_fixed.png") no-repeat;
  background-size: 100%;
  width: calc(var(--grid-cell) * 2);
  height: calc(var(--grid-cell) * 2); 
}

.character[facing="right"] .character_spritesheet {
  background-position-y: calc(var(--pixel-size) * -8);
}

.character[facing="up"] .character_spritesheet {
  background-position-y: calc(var(--pixel-size) * -16);
}

.character[facing="left"] .character_spritesheet {
  background-position-y: calc(var(--pixel-size) * -24);
}

.character[walking="true"] .character_spritesheet {
  animation: walkAnimation 0.6s steps(4) infinite;
}

@keyframes walkAnimation {
  from {
    transform: translate3d(0%, 0%, 0);
  }
  to {
    transform: translate3d(-100%, 0%, 0);
  }
}

/* === Corners === */
.corner_topleft,
.corner_topright,
.corner_bottomleft,
.corner_bottomright {
  position: absolute;
  width: var(--pixel-size);
  height: var(--pixel-size);
  background: var(--bg);
  z-index: 2;
}

.corner_topleft {
  top: calc(var(--pixel-size) * -1);
  left: calc(var(--pixel-size) * -1);
}

.corner_topright {
  top: calc(var(--pixel-size) * -1);
  right: calc(var(--pixel-size) * -1);
}

.corner_bottomleft {
  bottom: calc(var(--pixel-size) * -1);
  left: calc(var(--pixel-size) * -1);
}

.corner_bottomright {
  bottom: calc(var(--pixel-size) * -1);
  right: calc(var(--pixel-size) * -1);
}

/* /* === Item Bar Styles === */
/* .item-bar {
  display: flex;
  flex-direction: column;
  gap: calc(var(--pixel-size) * 2);
  z-index: 1000;
} */

/* .item-slot {
  width: calc(var(--pixel-size) * 16);
  height: calc(var(--pixel-size) * 16);
  background: rgba(0, 0, 0, 0.7);
  border: calc(var(--pixel-size) * 1) solid #ffffff;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
} */

/* .item-slot.selected {
  border-color: #ffd700;
  box-shadow: 0 0 calc(var(--pixel-size) * 2) #ffd700;
} */

/* .item {
  width: calc(var(--pixel-size) * 12);
  height: calc(var(--pixel-size) * 12);
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  image-rendering: pixelated;
} */

/* Item types */
/* .item.key {
  background-image: url('./textures/items/key.png');
}

.item.health {
  background-image: url('./textures/items/health.png');
}

.item.weapon {
  background-image: url('./textures/items/weapon.png');
}  */
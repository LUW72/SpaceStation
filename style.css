:root {
  --pixel-size: 2px;
  --grid-cell: calc(var(--pixel-size) * 16);
  --bg: #1a1a1a;
}

@media (min-width: 700px) {
  :root {
    --pixel-size: 3px;
  }
}

@media (min-width: 1000px) {
  :root {
    --pixel-size: 4px;
  }
}

/* === Global Styles === */
html,
body {
  height: 100%;
  margin: 0;
}

body {
  background: var(--bg);
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
  overflow: hidden;
  
}

.pixel-art {
  image-rendering: pixelated;
}

/* === Layout Elements === */
.game-container {
  display: flex;
  align-items: center;
  gap: calc(var(--pixel-size) * 6);
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.frame {
  width: calc(var(--pixel-size) * 160);
  height: calc(var(--pixel-size) * 144);
  outline: var(--pixel-size) solid #fff;
  position: relative;
  z-index: 1;
}

.camera {
  width: 100%;
  height: 100%;
  overflow: hidden;
  background: var(--bg);
  position: relative;
}

.map {
  position: absolute;
  top: 0;
  left: 0;
  image-rendering: pixelated;
  background-color: #07c2cc;
  background-size: 100%;
  width: calc(13 * var(--grid-cell));
  height: calc(10 * var(--grid-cell));
}

.map {
  position: relative;
  width: 100vw;
  height: 100vh;
  background: var(--bg);
  z-index: auto;
}

.tile {
  position: absolute;
  width: calc(var(--pixel-size) * 16);
  height: calc(var(--pixel-size) * 16);
  image-rendering: pixelated;
  background-repeat: no-repeat;
  background-size: cover;
}

/* === TILE TYPES === */

.tile.floor {
  background-image: url("./textures/floor_01.png"); 
}

.tile.wall_corner_a {
  background-image: url("./textures/wall_corner.png"); 
  transform: rotate(0);
}

.tile.wall_corner_b {
  background-image: url("./textures/wall_corner.png"); 
  transform: rotate(90deg);
}

.tile.wall_corner_c {
  background-image: url("./textures/wall_corner.png"); 
  transform: rotate(-90deg);
}

.tile.wall_corner_d {
  background-image: url("./textures/wall_corner.png"); 
  transform: rotate(180deg);
}

.tile.wall_corner_90_a {
  background-image: url("./textures/wall_corner_full.png"); 
}

.tile.wall_corner_90_b {
  background-image: url("./textures/wall_corner_full.png");
  transform: scaleX(-1); 
}

.tile.wall_corner_90_b_2 {
  background-image: url("./textures/wall_corner_full.png"); 
  transform: rotate(-90deg);  
}

.tile.wall_corner_90_c {
  background-image: url("./textures/wall_corner_full.png"); 
  transform: rotate(180deg);
}

.tile.wall_corner_90_d {
  background-image: url("./textures/wall_corner_full.png"); 
  transform: rotate(90deg);
}

.tile.wall {
  background-image: url("./textures/wall_2.png");
  transform: rotate(270deg);
}

.tile.wall_top {
  background-image: url("./textures/wall_2.png");
}

.tile.wall_bottom {
  background-image: url("./textures/wall_2.png");
  transform: rotate(180deg);
}

.tile.wall_right_side {
  background-image: url("./textures/wall_2.png");
  transform: rotate(90deg);
}


.tile.wall.top {
  background-image: url("./textures/wall_top.png"); 
}

.tile.wall_top_2 {
  background-image: url("./textures/wall_top_2.png"); 
}

.tile.grass {
  background-image: url("./textures/grass.png"); 
}

.tile.door {
  background-image: url("./textures/door_01.png"); 
}



.tile.empty {
  background-color: var(--bg);
}


/* Optional fallback for unknown tiles */
.tile.unknown {
  background-color: magenta;
}


.object-layer {
  position: absolute;
  top: 0;
  left: 0;
  pointer-events: none; /* allows character to walk through unless interactable handling is later added */
  width: 100%;
  height: 100%;
}

.object {
  position: absolute;
  width: calc(var(--pixel-size) * 8);  /* 16px tile / 2 = 8px */
  height: calc(var(--pixel-size) * 8);
  opacity: 0.9;
  border-radius: 2px;

  background-size: 100% 100%;
  background-repeat: no-repeat;
  background-position: center;  
}

/* Test visual styles */

.object.floor_crack {
  background-image: url("./textures/floor_01_crack.png");
  z-index: 0;
}

.object.floor_cable {
  background-image: url("./textures/floor_01_cable.png");
  z-index: 0;
}

.object.floor_drain {
  background-image: url("./textures/floor_01_drain.png");
  z-index: 0;  
}

.object.wall_pipe {
  background-image: url("./textures/wall_pipe.png");

  z-index: 0;  
}
.object.table_chair {
  background-image: url("./textures/obj_tableChair.png");

  position: absolute;
  background-position-y: -4px;  
  transform: scale(1.0);
  transform-origin: center; 
  pointer-events: none; /* Optional: so the object doesn't block input */

  z-index: 30;
}

.object.vending_mach {
  background-image: url("./textures/obj_vendingMach.png");
  width: calc(var(--pixel-size) * 20);  /* Doubled the width */
  height: calc(var(--pixel-size) * 16);  /* Doubled the height */
  transform-origin: center;
  pointer-events: none;
  z-index: 12;
  background-position: center;
  background-size: 100% 100%;
  background-color: #07c2cc;
  transform: translateY(-20px);
}

.object.table {
  background-color: saddlebrown;
}

.object.chest {
  background-color: crimson;
}

.object.signpost {
  background-image: url("./textures/obj_sign.png");
  background-position-y: -3px;
}

.object.plant {
  background-image: url("./textures/obj_plant.png");
}

.object.key_plant {
  background-image: url("./textures/obj_plant.png");
}

.object.antenna {
  background-image: url("./textures/obj_antenna.png");
  width: calc(var(--pixel-size) * 8);  /* Standard object width */
  height: calc(var(--pixel-size) * 32);  /* Taller height for antenna shape */
  transform-origin: bottom center;
  pointer-events: none;
  z-index: 40;  /* Lower z-index so character can pass in front */

  /* Ensure full texture display even if it extends beyond bounds */
  overflow: visible;
  background-size: contain;
  background-repeat: no-repeat;
  image-rendering: pixelated;
  /* Fix antenna texture display */
  background-position: center;
  background-size: 100% auto;
  /* transform: translateY(-75px); Adjust vertical position instead of background-position-y */
  /* Convert fixed pixel transform to viewport units */
  transform: translateY(-11vh); /* Converted from -75px, assuming viewport height relationship */
 /* Offset the transform to maintain original position */
}

.object.antenna_a_base {
  background-image: url("./textures/obj_antenna_01_base.png");
}

.object.antenna_a_middle {
  background-image: url("./textures/obj_antenna_01_middle.png");
  z-index: 40;
}

.object.antenna_a_top {
  background-image: url("./textures/obj_antenna_01_top.png");
  z-index: 40;
}

.object.door {
  background-color: #99d00c;
}


.object.workstation_a {
  background-image: url("./textures/obj_workstation_a.png");
  z-index: 40;
}

.object.workstation_b {
  background-image: url("./textures/obj_workstation_b.png");
  z-index: 40;
}

.object.workstation_c {
  background-image: url("./textures/obj_workstation_c.png");
} 

.object.workstation_d {
  background-image: url("./textures/obj_workstation_d.png");
}

/* === Character === */

.character {
  width: calc(var(--grid-cell) * 0.5);
  height: calc(var(--grid-cell) * 0.5);
  position: absolute;
  overflow: hidden;
  z-index: 20;
  transform: translate(calc(var(--grid-cell) * 0.25), calc(var(--grid-cell) * 0.25));
}


.character_spritesheet {
  position: absolute;
  background: url("./textures/character.png") no-repeat;
  background-size: 100%;
  width: calc(var(--grid-cell) * 2);
  height: calc(var(--grid-cell) * 2); 
}

.character[facing="right"] .character_spritesheet {
  background-position-y: calc(var(--pixel-size) * -8);
}

.character[facing="up"] .character_spritesheet {
  background-position-y: calc(var(--pixel-size) * -16);
}

.character[facing="left"] .character_spritesheet {
  background-position-y: calc(var(--pixel-size) * -24);
}

.character[walking="true"] .character_spritesheet {
  animation: walkAnimation 0.6s steps(4) infinite;
}

@keyframes walkAnimation {
  from {
    transform: translate3d(0%, 0%, 0);
  }
  to {
    transform: translate3d(-100%, 0%, 0);
  }
}

/* === Item Bar Styles === */
.item-bar {
  display: flex;
  flex-direction: column;
  gap: calc(var(--pixel-size) * 4);
  z-index: 1000;
  height: calc(var(--pixel-size) * 144); /* Same height as frame */
  justify-content: space-between; /* Distribute space evenly */
  padding: calc(var(--pixel-size) * 2) 0;
  margin-right: 100px; /* Add some padding top and bottom */
}

.item-slot {
  width: calc(var(--pixel-size) * 16);
  height: calc(var(--pixel-size) * 16);
  background: rgba(0, 0, 0, 0.7);
  border: calc(var(--pixel-size) * 1) solid #ffffff;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.item-slot.selected {
  border-color: #ffd700;
  box-shadow: 0 0 calc(var(--pixel-size) * 2) #ffd700;
}

.item {
  width: calc(var(--pixel-size) * 12);
  height: calc(var(--pixel-size) * 12);
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  image-rendering: pixelated;
}


/* Item types */
.item.key {
  background-image: url('./textures/items/key.png');
}

.item.health {
  background-image: url('./textures/items/health.png');
}

.item.weapon {
  background-image: url('./textures/items/weapon.png');
}

.item.plant {
  background-image: url("./textures/obj_plant.png");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  width: 100%;
  height: 100%;
}

.item.sign {
  background-image: url("./textures/obj_sign.png");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  width: 100%;
  height: 100%;
}

.item-counter {
  position: absolute;
  bottom: 2px;
  right: 4px;
  font-size: 10px;
  color: white;
  background: rgba(0, 0, 0, 0.6);
  padding: 1px 3px;
  border-radius: 3px;
  z-index: 2;
  font-family:'Press Start 2P', monospace;
}

.interaction-display {
  width: calc(var(--pixel-size) * 48);
  height: calc(var(--pixel-size) * 144);
  border: calc(var(--pixel-size) * 1) solid #ffffff;
  background: rgba(0, 0, 0, 0.7);
  margin: 0;
  display: flex;
  flex-direction: column;
}

.texture-display {
  height: 33.33%;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  image-rendering: pixelated;
  border-bottom: calc(var(--pixel-size) * 1) solid #ffffff;
}

.interaction-text-container {
  height: 66.67%;
  display: flex;
  flex-direction: column;
  padding: calc(var(--pixel-size) * 2);
}

.text-display {
  text-align: center;
  font-family: monospace;
  font-weight: bold;
  color: #ffffff;
  margin-bottom: calc(var(--pixel-size) * 2);
}

.description-text {
  text-align: center;
  font-family: monospace;
  color: #888;
  font-size: calc(var(--pixel-size) * 3);
  flex-grow: 1;
  display: flex;
  align-items: center;
  justify-content: center;
}

.interaction-hint {
  text-align: center;
  font-family: monospace;
  color: #aaa;
  font-size: calc(var(--pixel-size) * 3);
  border-top: 1px solid rgba(255, 255, 255, 0.2);
  padding-top: calc(var(--pixel-size) * 2);
  margin-top: auto;
}

.signpost-popup {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.8);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.popup-content {
  background: rgba(0, 0, 0, 0.9);
  padding: calc(var(--pixel-size) * 8);
  border: calc(var(--pixel-size) * 1) solid #ffffff;
  max-width: calc(var(--pixel-size) * 120);
  text-align: center;
}

.popup-text {
  color: #ffffff;
  font-family: monospace;
  font-size: calc(var(--pixel-size) * 4);
  margin-bottom: calc(var(--pixel-size) * 4);
  line-height: 1.5;
}

.close-popup {
  background: #333;
  color: #ffffff;
  border: calc(var(--pixel-size) * 1) solid #ffffff;
  padding: calc(var(--pixel-size) * 2) calc(var(--pixel-size) * 4);
  font-family: monospace;
  font-size: calc(var(--pixel-size) * 3);
  cursor: pointer;
}

.close-popup:hover {
  background: #444;
}

.room-header {
  position: absolute;
  top: calc(var(--pixel-size) * -10);
  left: 0;
  width: 100%;
  text-align: center;
  color: #ffffff;
  /* font-family: monospace; */
   font-family: 'Press Start 2P', monospace;
  font-size: calc(var(--pixel-size) * 6);
  font-weight: bold;
  text-shadow: calc(var(--pixel-size) * 1) calc(var(--pixel-size) * 1) rgba(0, 0, 0, 0.5);
  z-index: 2;
}



/* Fullscreen dark overlay */
.men-popup-overlay {
  position: fixed;
  top: 0; left: 0;
  width: 100vw; height: 100vh;
  background: rgba(0, 0, 0, 0.85);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
}

/* Central menu container */
.men-popup-content {
  background: #1e1e1e;
  color: #00ffcc;
  padding: 40px 32px;
  border: 4px solid #00ffcc;
  border-radius: 16px;
  box-shadow: 0 0 20px #00ffcc88;
  text-align: center;
  font-family: 'Press Start 2P', monospace;
  width: 90%;
  max-width: 420px;
}

/* Menu title */
.men-popup-content h2 {
  margin-bottom: 32px;
  font-size: 16px;
  color: #ffffff;
  text-shadow: 0 0 5px #00ffcc;
}

/* Buttons shared style */
.menu-button {
  display: block;
  width: 100%;
  background: transparent;
  color: #00ffcc;
  border: 2px solid #00ffcc;
  border-radius: 8px;
  padding: 14px 10px;
  margin: 12px 0;
  font-size: 12px;
  cursor: pointer;
  transition: all 0.25s ease-in-out;
  font-family: 'Press Start 2P', monospace;
  text-transform: uppercase;
  letter-spacing: 1px;
}

/* Hover effect */
.menu-button:hover {
  background-color: #00ffcc;
  color: #000;
  box-shadow: 0 0 12px #00ffcc;
  transform: scale(1.05);
}






